type Business {
  id: ID!
  name: String!
  description: String
  address: String!
  phone: String!
  website: String
  category: String!
  price: Float!
  appointments: [Appointment!]!
}

type Appointment {
  id: ID!
  business: Business!
  clientName: String!
  clientEmail: String!
  date: String!
  time: String!
}

type Query {
  business(id: ID!): Business
  businesses(category: String, sortBy: SortBy): [Business!]!
}

enum SortBy {
  NAME_ASC
  NAME_DESC
  PRICE_ASC
  PRICE_DESC
}

type Mutation {
  createBusiness(
    name: String!
    description: String
    address: String!
    phone: String!
    website: String
  ): Business!

  createAppointment(
    businessId: ID!
    clientName: String!
    clientEmail: String!
    date: String!
    time: String!
  ): Appointment!
}

type Customer {
  id: ID!
  name: String!
  email: String!
  profileImage: String
  savedBusinesses: [Business!]!
  appointments: [Appointment!]!
}

type Query {
  customer(id: ID!): Customer
  customers: [Customer!]!
}

query {
  businesses(category: "Restaurant", sortBy: PRICE_ASC) {
    id
    name
    description
    address
    phone
    website
    category
    price
  }
}

type Mutation {
  createCustomer(
    name: String!
    email: String!
    password: String!
    profileImage: String
  ): Customer!

  updateCustomerProfile(
    id: ID!
    name: String
    email: String
    profileImage: String
  ): Customer!

  saveBusiness(customerId: ID!, businessId: ID!): Boolean

  createAppointment(
    customerId: ID!
    businessId: ID!
    clientName: String!
    clientEmail: String!
    date: String!
    time: String!
  ): Appointment!
}

type Entrepreneur {
  id: ID!
  name: String!
  email: String!
  profileImage: String
  businesses: [Business!]!
}

type Query {
  entrepreneur(id: ID!): Entrepreneur
  entrepreneurs: [Entrepreneur!]!
}

type Mutation {
  createEntrepreneur(
    name: String!
    email: String!
    password: String!
    profileImage: String
  ): Entrepreneur!
}

type Subscription {
  appointmentScheduled(customerId: ID!): Appointment
}